// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"datacenter/user/rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserIdRequest    = user.UserIdRequest
	UserInfoResponse = user.UserInfoResponse
	UserNameRequest  = user.UserNameRequest

	User interface {
		// 获取用户数据（用户id）
		GetUserInfoById(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
		// 获取用户数据（用户名）
		GetUserInfoByUsername(ctx context.Context, in *UserNameRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 获取用户数据（用户id）
func (m *defaultUser) GetUserInfoById(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfoById(ctx, in, opts...)
}

// 获取用户数据（用户名）
func (m *defaultUser) GetUserInfoByUsername(ctx context.Context, in *UserNameRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfoByUsername(ctx, in, opts...)
}
